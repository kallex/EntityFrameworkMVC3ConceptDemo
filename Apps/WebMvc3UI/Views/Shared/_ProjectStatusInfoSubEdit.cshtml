@model ProjectStatusReporting.MVCModel.ProjectStatusInfo

<script src="@Url.Content("~/Scripts/jquery-1.4.4.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<fieldset>
    <legend>ProjectStatusInfo</legend>

    <div class="editor-label">
        @Html.LabelFor(model => model.ProjectStatusInfoOwner)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.ProjectStatusInfoOwner)
        @Html.ValidationMessageFor(model => model.ProjectStatusInfoOwner)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.ProjectStatusInfoUpdated)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.ProjectStatusInfoUpdated)
        @Html.ValidationMessageFor(model => model.ProjectStatusInfoUpdated)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.ProjectStatusInfoGoal)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.ProjectStatusInfoGoal)
        @Html.ValidationMessageFor(model => model.ProjectStatusInfoGoal)
    </div>
    <h2>Project Measurements:</h2>
    <p>
    @for(int i = 0; i < Model.Measurements.Count; i++)
    {
        <div>
        @Html.EditorFor(x => x.Measurements[i], "ProjectMeasurement")
        </div>
    }
        <input type="submit" name="button" value="Add Measurement" />
    </p>
</fieldset>
